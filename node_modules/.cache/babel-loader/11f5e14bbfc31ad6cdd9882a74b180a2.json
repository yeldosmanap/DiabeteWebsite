{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\den_prezent\\\\src\\\\components\\\\Modal\\\\Modal.jsx\";\nimport React from 'react';\nimport './css/modal.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Modal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      allComponents: []\n    };\n    this.getAllComponents = this.getAllComponents.bind(this);\n  }\n\n  componentDidMount() {\n    this.getAllComponents();\n  }\n\n  getAllComponents() {\n    fetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list').then(response => {\n      return response.json();\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        allComponents: data.meals\n      });\n    });\n  }\n\n  render() {\n    const components = [];\n    const allComponents = this.state.allComponents;\n\n    for (let index = 1; index < 21; index++) {\n      let el = this.props.data[`strIngredient${index}`];\n\n      if (el !== \"\" && el !== null) {\n        let elem = allComponents.find(comp => comp.strIngredient.toLowerCase() === el.toLowerCase());\n        let elId = elem !== undefined ? elem.idIngredient : \"\";\n        components.push({\n          name: el,\n          id: elId\n        });\n      }\n    }\n\n    console.log(components);\n    const componentsList = components.map(el => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [el.name, \" \", /*#__PURE__*/_jsxDEV(\"b\", {\n        children: el.id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 18\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 4\n    }, this));\n    var grainUnits = 0;\n\n    for (let index = 1; index < components.length; index++) {\n      grainUnits = parseInt(grainUnits, 10) + parseInt(components[index].id, 10);\n    }\n\n    var insulinSum = grainUnits * 2;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal\",\n      id: \"modal\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"modal__body\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"modal__body__close\",\n          onClick: () => document.getElementById('modal').style.display = 'none',\n          children: \"\\u274C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: this.props.data.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: componentsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" Number of grain units = \", grainUnits, \" , dose of insulin \", insulinSum, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this);\n  }\n\n}\n\nexport default Modal;","map":{"version":3,"sources":["C:/xampp/htdocs/den_prezent/src/components/Modal/Modal.jsx"],"names":["React","Modal","Component","constructor","props","state","allComponents","getAllComponents","bind","componentDidMount","fetch","then","response","json","data","console","log","setState","meals","render","components","index","el","elem","find","comp","strIngredient","toLowerCase","elId","undefined","idIngredient","push","name","id","componentsList","map","grainUnits","length","parseInt","insulinSum","document","getElementById","style","display","strMeal"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,iBAAP;;;AAEA,MAAMC,KAAN,SAAoBD,KAAK,CAACE,SAA1B,CAAoC;AACnCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAClB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACZC,MAAAA,aAAa,EAAE;AADH,KAAb;AAGA,SAAKC,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACA;;AACDC,EAAAA,iBAAiB,GAAG;AACnB,SAAKF,gBAAL;AACA;;AAEDA,EAAAA,gBAAgB,GAAG;AAClBG,IAAAA,KAAK,CAAC,yDAAD,CAAL,CACEC,IADF,CACQC,QAAD,IAAc;AACnB,aAAOA,QAAQ,CAACC,IAAT,EAAP;AACA,KAHF,EAIEF,IAJF,CAIQG,IAAD,IAAU;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,WAAKG,QAAL,CAAc;AAAEX,QAAAA,aAAa,EAAEQ,IAAI,CAACI;AAAtB,OAAd;AACA,KAPF;AAQA;;AAEDC,EAAAA,MAAM,GAAG;AACR,UAAMC,UAAU,GAAG,EAAnB;AACA,UAAMd,aAAa,GAAG,KAAKD,KAAL,CAAWC,aAAjC;;AACA,SAAK,IAAIe,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,EAA5B,EAAgCA,KAAK,EAArC,EAAyC;AACxC,UAAIC,EAAE,GAAG,KAAKlB,KAAL,CAAWU,IAAX,CAAiB,gBAAeO,KAAM,EAAtC,CAAT;;AACA,UAAIC,EAAE,KAAK,EAAP,IAAaA,EAAE,KAAK,IAAxB,EAA8B;AAC7B,YAAIC,IAAI,GAAGjB,aAAa,CAACkB,IAAd,CAAmBC,IAAI,IAAIA,IAAI,CAACC,aAAL,CAAmBC,WAAnB,OAAqCL,EAAE,CAACK,WAAH,EAAhE,CAAX;AACA,YAAIC,IAAI,GAAGL,IAAI,KAAKM,SAAT,GAAqBN,IAAI,CAACO,YAA1B,GAAyC,EAApD;AACAV,QAAAA,UAAU,CAACW,IAAX,CAAgB;AAAEC,UAAAA,IAAI,EAAEV,EAAR;AAAYW,UAAAA,EAAE,EAAEL;AAAhB,SAAhB;AACA;AACD;;AACDb,IAAAA,OAAO,CAACC,GAAR,CAAYI,UAAZ;AACA,UAAMc,cAAc,GAAGd,UAAU,CAACe,GAAX,CAAgBb,EAAD,iBACrC;AAAA,iBAAKA,EAAE,CAACU,IAAR,oBAAc;AAAA,kBAAIV,EAAE,CAACW;AAAP;AAAA;AAAA;AAAA;AAAA,cAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YADsB,CAAvB;AAIA,QAAIG,UAAU,GAAI,CAAlB;;AAEA,SAAK,IAAIf,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAGD,UAAU,CAACiB,MAAvC,EAA+ChB,KAAK,EAApD,EAAwD;AACvDe,MAAAA,UAAU,GAAGE,QAAQ,CAACF,UAAD,EAAa,EAAb,CAAR,GAA2BE,QAAQ,CAAClB,UAAU,CAACC,KAAD,CAAV,CAAkBY,EAAnB,EAAuB,EAAvB,CAAhD;AACA;;AAED,QAAIM,UAAU,GAAGH,UAAU,GAAG,CAA9B;AAEA,wBACC;AAAK,MAAA,SAAS,EAAC,OAAf;AAAuB,MAAA,EAAE,EAAC,OAA1B;AAAA,6BACC;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,gCACC;AAAM,UAAA,SAAS,EAAC,oBAAhB;AAAqC,UAAA,OAAO,EAAE,MAAMI,QAAQ,CAACC,cAAT,CAAwB,OAAxB,EAAiCC,KAAjC,CAAuCC,OAAvC,GAAiD,MAArG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA,oBAAK,KAAKvC,KAAL,CAAWU,IAAX,CAAgB8B;AAArB;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAA,oBACEV;AADF;AAAA;AAAA;AAAA;AAAA,gBAHD,eAMC;AAAA,kDAA8BE,UAA9B,yBAA6DG,UAA7D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAND;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,YADD;AAYA;;AA3DkC;;AA8DpC,eAAetC,KAAf","sourcesContent":["import React from 'react';\r\nimport './css/modal.css';\r\n\r\nclass Modal extends React.Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\tallComponents: []\r\n\t\t}\r\n\t\tthis.getAllComponents = this.getAllComponents.bind(this);\r\n\t}\r\n\tcomponentDidMount() {\r\n\t\tthis.getAllComponents();\r\n\t}\r\n\r\n\tgetAllComponents() {\r\n\t\tfetch('https://www.themealdb.com/api/json/v1/1/list.php?i=list')\r\n\t\t\t.then((response) => {\r\n\t\t\t\treturn response.json();\r\n\t\t\t})\r\n\t\t\t.then((data) => {\r\n\t\t\t\tconsole.log(data);\r\n\t\t\t\tthis.setState({ allComponents: data.meals })\r\n\t\t\t});\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst components = [];\r\n\t\tconst allComponents = this.state.allComponents;\r\n\t\tfor (let index = 1; index < 21; index++) {\r\n\t\t\tlet el = this.props.data[`strIngredient${index}`];\r\n\t\t\tif (el !== \"\" && el !== null) {\r\n\t\t\t\tlet elem = allComponents.find(comp => comp.strIngredient.toLowerCase() === el.toLowerCase());\r\n\t\t\t\tlet elId = elem !== undefined ? elem.idIngredient : \"\";\r\n\t\t\t\tcomponents.push({ name: el, id: elId })\r\n\t\t\t}\r\n\t\t}\r\n\t\tconsole.log(components);\r\n\t\tconst componentsList = components.map((el) => (\r\n\t\t\t<li>{el.name} <b>{el.id}</b> </li>\r\n\t\t))\r\n\r\n\t\tvar grainUnits =  0;\r\n\r\n\t\tfor (let index = 1; index < components.length; index++) {\r\n\t\t\tgrainUnits = parseInt(grainUnits, 10) + parseInt(components[index].id, 10);\r\n\t\t}\r\n\r\n\t\tvar insulinSum = grainUnits * 2;\r\n\r\n\t\treturn (\r\n\t\t\t<div className=\"modal\" id=\"modal\">\r\n\t\t\t\t<div className=\"modal__body\">\r\n\t\t\t\t\t<span className=\"modal__body__close\" onClick={() => document.getElementById('modal').style.display = 'none'}>‚ùå</span>\r\n\t\t\t\t\t<h3>{this.props.data.strMeal}</h3>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t{componentsList}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t\t<h2> Number of grain units = {grainUnits} , dose of insulin {insulinSum} </h2>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Modal;"]},"metadata":{},"sourceType":"module"}